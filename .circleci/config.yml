# Simple colcon build and deploy
version: 2.1

orbs: 
  aws-s3: circleci/aws-s3@3.0.0

workflows:
  build,test and create:
    jobs:
      - build-test:
          filters:
            tags:
              ignore: /[0-9]*\.[0-9]*\.[0-9]/
      - create:
          requires:
            - build-test
          context:
            - ROS Pipelines

  build,test,create and deploy:
    jobs:
      - build-test:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /[0-9]*\.[0-9]*\.[0-9]/
      - create:
          requires:
            - build-test
          context:
            - ROS Pipelines
      - deploy:
          requires:
            - build-test
            - create
          context:
            - AWS ECR Access

executors:
  simple-docker:
    docker:
      - image: gallaisoma/ros2-galactic:latest
    working_directory: ~/workspace/src/teb_local_planner 
jobs:
  build-test:
    executor: simple-docker
    steps:
      - checkout:
          path: ~/workspace/src/$CIRCLE_PROJECT_REPONAME
      - run: 
          name: Run build and test
          command: |
            cd ~/workspace/src
            source /opt/ros/galactic/setup.bash
            git clone git@github.com:cmrobotics/navigation2.git
            git clone git@github.com:cmrobotics/costmap_converter.git
            apt update
            apt install -y ros-galactic-geometry-msgs
            cd ~/workspace
            colcon build --packages-up-to $CIRCLE_PROJECT_REPONAME

      - persist_to_workspace:
          root: ../..
          paths: 
            - .
  create:
    executor: simple-docker
    steps: 
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Deploy the deb artifact
          command: |
            cd ~/workspace
            mkdir ~/.ssh/
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            git clone git@github.com:cmrobotics/pipeline_scripts.git
            apt update
            apt install -y ros-galactic-geometry-msgs
            cd ~/workspace/pipeline_scripts
            ./binarization.sh

      - store_artifacts:
          path: ~/workspace/src/ros-galactic-teb_local_planner.deb 

      - persist_to_workspace:
          root: ~/workspace
          paths: 
            - src/ros-galactic-teb_local_planner.deb 

  deploy:
    executor: simple-docker
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Renaming with tag name
          command: |
            echo "current version: $CIRCLE_TAG"
            mv ~/workspace/src/ros-galactic-$CIRCLE_PROJECT_REPONAME.deb ~/workspace/src/ros-galactic-$CIRCLE_PROJECT_REPONAME-$CIRCLE_TAG.deb
            apt-get update
            apt-get install unzip
      - aws-s3/copy:
          arguments: |
            --acl private 
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          from: ~/workspace/src/ros-galactic-$CIRCLE_PROJECT_REPONAME-$CIRCLE_TAG.deb
          to: 's3://aptly-debian-files/ros-galactic-$CIRCLE_PROJECT_REPONAME-$CIRCLE_TAG.deb'

